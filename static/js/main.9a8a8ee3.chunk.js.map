{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","className","alt","src","this","props","monster","id","name","email","Component","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","event","userInput","target","value","toLowerCase","setState","searchField","state","fetch","then","response","json","users","filteredMonsters","filter","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAkBeA,E,4JAZb,WACE,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BC,KAAKC,MAAMC,QAAQC,GAA7C,6BACtB,6BAAKH,KAAKC,MAAMC,QAAQE,OACxB,4BAAIJ,KAAKC,MAAMC,QAAQG,e,GAPZC,aCENC,G,MAAW,SAAAN,GACtB,OACE,qBAAKJ,UAAU,YAAf,SAEII,EAAMO,SAASC,KAAI,SAAAP,GACjB,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCPvBO,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBAAOf,UAAU,SAASgB,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCuCjEG,E,kDAvCb,WAAYd,GAAQ,IAAD,8BACjB,cAAMA,IAcRW,aAAe,SAAAI,GACb,IAAMC,EAAYD,EAAME,OAAOC,MAAMC,cACrC,EAAKC,SAAS,CAAEC,YAAaL,KAf7B,EAAKM,MAAQ,CACXf,SAAU,GACVc,YAAa,IAJE,E,qDASnB,WAAqB,IAAD,OAClBE,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKP,SAAS,CAAEb,SAAUoB,S,oBAQ/C,WACE,IAAQpB,EAAaR,KAAKuB,MAAlBf,SACFS,EAAYjB,KAAKuB,MAAMD,YAAYF,cACnCS,EAAmBrB,EAASsB,QAAO,SAAA5B,GACrC,OAAOA,EAAQE,KAAKgB,cAAcW,SAASd,MAG/C,OACE,sBAAKpB,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWc,YAAY,kBAAkBC,aAAcZ,KAAKY,eAC5D,cAAC,EAAD,CAAUJ,SAAUqB,W,GAhCVvB,aCOH0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9a8a8ee3.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport './card.styles.css';\n\nclass Card extends Component {\n  \n  render() {\n    return (\n      <div className=\"card-container\">\n        <img alt=\"monster\" src={`https://robohash.org/${this.props.monster.id}1?set=set2&size=180x180`}/>\n        <h2>{this.props.monster.name}</h2>\n        <p>{this.props.monster.email}</p>\n      </div>\n    );\n  }\n  \n}\n\nexport default Card;","import React from 'react';\n\nimport Card from '../card/card.component';\n\nimport './card-list.styles.css';\n\nexport const CardList = props => {\n  return (\n    <div className=\"card-list\">\n      {\n        props.monsters.map(monster => {\n          return <Card key={monster.id} monster={monster}/>;\n        })\n      }\n    </div>\n  );\n};","import React from 'react';\n\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n  return (\n    <input className=\"search\" type=\"search\" placeholder={placeholder} onChange={handleChange}/>\n  );\n};","import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      monsters: [],\n      searchField: '',\n    };\n    \n  }\n  \n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n  \n  handleChange = event => {\n    const userInput = event.target.value.toLowerCase();\n    this.setState({ searchField: userInput });\n  };\n  \n  render() {\n    const { monsters } = this.state;\n    const userInput = this.state.searchField.toLowerCase();\n    const filteredMonsters = monsters.filter(monster => {\n        return monster.name.toLowerCase().includes(userInput);\n      },\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder=\"search monsters\" handleChange={this.handleChange}/>\n        <CardList monsters={filteredMonsters}/>\n      \n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}